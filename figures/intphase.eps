%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: intphase.dvi
%%CreationDate: Sun Sep 29 14:15:51 2013
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 252
%%DocumentFonts: CMR12 CMMI12 CMR8 CMMI8
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips intphase.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.09.29:1415
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124DFAE11BA4AB27032F02AB84277DB8B54826DA4D626694B5A24E494E
8D7F6E68647F52547A12603D4347C5B8DFC034C2CC4108C084B6F142F6B17D77
767F3B7AB0526CFE27D03CE57AF6746AA7EA8A7768C82B16C410656CEB546C90
768822F0AA6EC0BE08CDFFFA51D86E790FDBF42CE311800F3BD77EA6CECB8094
C9147CC03E81DCE667BF5CE02CCC259B32BBDFAE0932BDF6CEDEC9DB5E31AE2B
CBD624841C0732E52B15DE0DCAFA9059C04E5DB1F86ECDB1C4EA1027483B2436
664B40123EDAA2202181BC38E3E188AC627D4087295D9D9C377D93751EBDEA7C
849A6F8F77C0C7394EE975AFF723AECE988A8D3D8E9700125DD6E81807848361
B04A5291DA4E8CD399A52CCBB105FC4417FA428A10A53CE4F352E953A78519A8
C488ACF57632844F1A7DD9BD5809F54FC73F3174263E1AD18CF4DF32D14C77D6
101A2B3EF151D7D01501563BD1A10B3E4900FAD07ACC0B765CA1FD5EBDA33683
C5A76C6909F6FF9846664EE973004ACE680A1610035401B5092DADBDCCE58A9B
FAD8CECB99EFCF741A2FF9C8FB0DC19533C28B67816E0204D1B89AE52EB5ADE4
871B0B4F36794811A185D08A37235B937CB6F6DE8514F10FCB8A2415875DDDE1
A9A354642181C3A978B0289F96BF31B37BC1B16BEF6C7CCAF3CD461B4DA1BE5A
08933895CED41FA26E8BA92D1620ACE122F3684F6791AFFB226A7F3F8671530C
AB5B442017069E5153AF5396BC9F33F6F70486FFD31571FC5A21B37B74FCB923
BAB998B156B6AD3156B73F44835FE8DFEEC77AF3E77B2D055894CB1776A10327
F0F372282419C88541E7BF3BEE8FBA4F6176EAE2EC4EC6B5FD806EFB6C4018AC
E26D927C3BE05A8202E723A8569A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762B86FECDA8944
AA3B20AD6019056E01677B959B23107F1962AB2CF6A52AB2745FDD5383ABAC44
22F83D93327D560012C565E49F2EEC04A6EEBA9D605FBD223B59CD8DE300A5CA
3790E9B4CF846CF5AE93B687F3D3EA411CAC0F03C47ADF9D83887702475E36A6
9FDA88B48C6FBF07959EF4C6F61741CDC2D503CB8AA0135458716D07D1774C21
750D01533D7CC822892EB494A82295E9537CF478A381CA7146A6BCDB1FD833E1
4D59DEA7DE0D1976AC7B448C17861ADB891766639B6F06B1CF3B56FC847D6C37
606C5D8EF98FA61D8943C404756BFBD2F87ADEB2DA92585C7521D88F486F5DCC
92ED93565808705D38E9DB085661B771872CBAE4DA363A02669E99EF1AD09E50
636CFF7172E5EBFB1DC08E76123FD5E5D60D76DB7A5DDBA4F32521A4543169B9
8825E3F2A124A1CDF79BC32262897100B0BEE618A92806BBFB7C1522821547BB
7D97346A3FFFDEB9A36068828431810D0640D0F3F07D8EBC8F1A952BFB809BF7
E54C0444110A1EE0BC7392CCE28224C70E6872A8C91DE82508094E3418C02118
5507AD925037FC20ECBEAB31D84929D5C6A0720FBB3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 21 /lambda put
dup 27 /sigma put
dup 74 /J put
dup 110 /n put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0DA1186446DD565542BCCC7D339A1EB34C7F49246E8D72E987EB477C6DB757
99AF86CEBCD7605C487A00CD2CD093098182DC57B20D78ECE0BECF3A0BF88EBA
C866DB19F34BBBED6634AFC0F08D2AFB2A92578A6F8B4ADCD6594737FF6EED7D
5B536DA9E3E2CADB40DB7C600EA4D100D33C3B92B1CF857E012C4EB370BA8295
55B50047CBFBA38989E560076BF58F5F0072B19E365B5DB31A82558167B9D24F
87389F47AA2E32922424A305CA165AECC9492DE2A0D2E0C436DD63E74709DA1D
958CF8A2449787052CC6CFE816E47C1BC0CE708F9A2438FB8B03A2C14D14D52B
843B219FE53CAE86A3D8D450B5B75A1FC9CEAFBD1F0BCCEE0A2ADB3FD5513227
2CCE5E59160889B25071ED3BDAD43B8E466CF8FF3FC48D7D370796DFF56E6D40
2368339CA62322E1D492E4B1D5CF019AFC5B2B7459FCA74D43194437750EB11E
D9974FFCC46EA4713C6562631A0819C7ACCD107CEA926A1550F09C040EB89445
56BB4ACF0CCE2C26FC0A48A235B31406FFC81A2DF8C623B890DBC8147E0DEACB
5E8EBFF7B7AC066E775AD10195F18CC4A9524C9053BEE5E6F86BC5EE731CEBB3
E6C8802F11028F3A27C4DB3A7BC5DB49B07948CEEAB46313138DCF855C0CF4A1
185EBF575875F910D7E149FA7221F002D6C591C4CD5EB1965BBC72710AAF929F
C6D7AFCE08CFF4DEC79F44F8AB679AECE5F739449674C9D9CE23011724120AA5
83B155203A7F3138EEE3CF29ADCBF42CCFD0745558F75B2888323AE178D09E0D
61EAE9DAA351DD52A0B40CA2F6AC1F56A4FE3CDD5F94CA4BBB16802500B9552E
D90B699AD56688EA2F553082624D3AA2CE9427C91CE84480651E2F4151CB45DE
3C2675499EAD1793146F66B9B1CDB27D0E5B43FEB6666E573B9186B76BB6EC6B
8A741E0FF2C86C0D18694854310E9FEBE5C4BEE2C7E526E2F22758463E56B1B5
3D69950CCB5E320001A80230F1328AA40A7F9DBD68D62BAD187087E5FE9E856C
19A34846CB5274499FC1CFBBCFCC7DAB44CDA0C852B38EE743A10BAACABDE01B
9D9FF6516153FE6BF59B722C8E8899A38B81564FCB51DCC4EFBAAC49307A6C83
9987008D6AB1526B25E4AF74D0F73F9E7E6E3801270E299B6511AF51C8865001
B30D5B09FDD8115C38C0A18BB6B14301684663E9A75180699D4661B632428743
9A2E64EB7157A00AFA9AAF0B67DC30E3FFD384EE2FBE2452B90C6E172EFB2744
AB76706E846D44DDAC8A1506E12A3855105F5C7FAF4371DB40022DACB77536CB
F8BD600B8D29FA030AAE3604032A3CD457C00F391DBD2D575B8AD8A2DF9433B1
27F1AA0832D281EBA8C3F3607E90E95F1D82094F13794B2305210332C468EF1D
41ABAF3D9E4A063A4327FD29B2F10585B0B69EA83FCBEC7F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /fl put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 61 /equal put
dup 72 /H put
dup 73 /I put
dup 81 /Q put
dup 83 /S put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CD8D247017F4
80F3953FA6A64C2753F39AC37ECF0CE17D651CD5799165A6ECAC3E7D14EAD2D5
02BB8E67AD59402DD8014FD8092D6A874ECB8599EE636B70A9673C0840D831E4
69E929144856D7F76FABD62F988D7473D6DBA3E26A277B46D38262DA9AE4D4C8
053D8CD115DB965C64D771294ED6CC22DDCAA4308CD093C9D91B13235F76449D
9BE3EE7A1D4085ADC6A152888877D251ED99B2FD2CB4100EBAEB02CC1A2A3EC6
4EB8764F1D4D254EFE283761CB9CCED5315CF4A1908407EC46A87024663CA35D
63A6C9ACEBDCD45B6914FBB41A812F9F1FCCBC4B2D2BE2438F5C9598E7392FE3
77996B8BDAD0AFC9F565942001DE075BD2A027283E07649EB05BCFEA63B40F71
BA88171F56FCD728C4DB3E830555441A4C2D66E1F48ABB7594909C877533BC22
989E4255EB1D01CE7C5492D218ED93C45CF7C1087139ADC1ADD8BBC28EEAA6AD
BC3BB8E1B3439EF9200E572E651EAAC37A24C04F15C579E05CD06F76D88DD884
D4F93C17C7E0DA71A238248D7CB1E8AF7352CCBB8ABBDB4C1B8AA2460D970A70
0DE594B863814229024DC86F1EF251946F12330ECC097E4E88045575C9D252B4
63F12F0AB1B721FBEB0C59D2A1B357DB334AD5ABA51CD0508AC68FB88A85B9F0
A9D400C83410BFDC74959E751E23B4D58E14FC4236F027E8777817E5DC8B789A
AA1280FDF6111FF46C363EBEA5651989DF9AC97BAB91DF755397AB1A50B8B9FE
8CDCFC0884FB0106DF3DE08040B513550A50F29486B8959F42A01C8A07D9D5E9
81B58A1FE31FB9CCB1197321E0F72675EF7200B5BA879C25BF3E76BBBAF76AB2
E74A85B19AD9E984C5552EDBB6359E5ECEAFDF0017ED967EF32CCFD50783C0F4
64DDBD45A134C5D6E075991F12360E6315CB8BEEB3F5B5441DC2D725F4400C18
B98B3B434076FCC3D1C78D30EB63EC972048F18FC76FDC054693F2721A02D808
9306CC6C0C1D395DFA13904060596E4A7C52434108CBB9CDB3B35F4697A29559
453559D560B4886A307D788EC1C11FE46C7197B3B8A50CB237CD1BFDF9279161
25FF3D479042CFF40AE9C33141A1F93F735E93043DB74D0F19E40062C9A45AF8
803B99ACCB59CD903C82D28304E4EF97351BA01F6859C5BFEB155053E8D8CD65
931D8CAA29B8EB10F425ECAEBA7756BEC246B81BBD6B1034C27F3BBB7C6771BB
547DF318AC77EF6EE3CE05306A40A9CA965119CBD64FB2A2011F0247E82A34F4
94F4F024E3695CA26AF9676B691018F3B99639E344FDEF8368DFBB1CFBC58837
E5DE98544B7BCF1B6A188C6C9291240E6676E6E6E52738C462B05C8F6A89DCB0
D393B80E1B3D6B53CB468CFAC137A1B47BE77025022FDE2D5E579AC2E2BACB52
47BC682F3A0A64176B7E65D32D7C5618E758E273304FFB2D9F08A2B642196627
3A65B3068AA6E5AE6CA1AEEC8B814147FCA999C634F73A6E16EAD9A52CBEE56D
777994712B0FDD0A5AA6FE100553A56736FB50C2B0FF180AB8E59DD7581D76C9
2480E2D2B5FB7E60EA82222D207F224E478AB0A4248DA7C4455BDBD9360098FC
FD8C6E4DB4836D63AC15FE1C516555B5B0C62BC8123051CB71CC7F566DB4590F
134EDEBA52DE265E57DDF12BB5F9C0288B6B79097F7816E517A199FF13DACBC6
DFD04860E099713E1989A9344146CB7778191438886D49BBCD07A1B0FABB591C
8B74D6526E68C76E4863DC318478620BC3D489121B1FF2350B4D2BFE61833F74
430BFE665642E406B06F55F6236CA0A2C8C899CB87097F15240C3806C06CA5F5
36CC6A740CFA2C20D2431EC55D487724704BD30D6540FFE4B074B4E07863F653
215AFCB8A8E33731342B11175CE5C23DC8D392BB01266830A3D871B2CB8C9A30
0066B3D7C9C90EE468387AB3E70434BAED17CD595029CC7CA9D9FDAD58A39B8A
4714D106D7A3DB08364328FF195477B70F09E56583B8BD80360FF82E71E9A862
164442B8BAB5EC77F004FE1D3B9EA6BFCBD212DDF834F057D32B163178CCF4A3
EE2E931D5FF9A19FABAAEAB2317C5B3544847CFE5242FDE2D86BE0AFFC1D1C45
241581344C7512E38D7D5E0257662F8DB70126DC7241EB985D3E40150E4E9FD8
1FEBE7F45DF13E93E6146137D31CE0C932789A412BD3F43E0ADE17BE15E91039
09BE7C80FC608B951D11296F0655E1D04E02A41CD6057A87302DFD32BBD2E23C
7E9270EE1B0FFBDC834F239DBE8DF2E0CAB76DE3FA7A61B783F433840CCD3680
AE3078475935330C605146524412C3EC56D76CAB2768B30DA976AE7AE7BE3565
457F996AC4EE988B1ADD971D6EE0A7C596BE528D04C01C9FD602478454BDDC96
DC6F9BFE8687AB43DADAFA4269F31A2FCE9B6E5BC9BC1D696BF3143FFFB0FDFB
936D678FC156537048FAC665B853378AB6E2A6C0CC0FA017535C11B2AC83F338
12FBF57ACC03A3993CFD8A693E3942B47FD8F761FEBA0B8045C2425E43DACBB3
5ED17CA213526B62E92A3E9FE9A9F4283465B60AAF5E5F152BF47CFB6F44AA95
BA2B27A0CBDE02857E943D9632B59CA4033C640339D3C4AEB6CF5A774D1800F0
240483E6CE4325A83DE3BBDBE1FC33D5CD39588B5E129D69CC533A28F76DB1AD
C311A9EDEF4BF9A77384952F559F26C5A54D995298D4C3BF0A1BBA4859E6FCE5
5F4922D4D61C021A25491254CC2942CCAF29C07F9468206C4ABE79C260BF42C5
806C4AC7FCA0E6CC75BFAE6342FCC43076A46472BCB916DF49596EBB830C846A
69472CD048FBDC75388BA192ED9FCED626B31B8DD7F6EAEC8D0912DC36D04D02
476653FC07D5D075AD3B6D2B7303DEBE28AC1C4712AE2F1AF14588C1AEC33170
BB121E9647677D4474FA90B57C107318627A5708A48193F66CD9BC3E2B445098
7B376001C235C23885A34A41049551D27767A97F63DF7D28237A072311CE599F
BBADCA5A3859A8F3DC3DCE67AFD82997976F66FEF38F8CFF4DC350C34EC6FF63
ED38396076A1AC7F637AF91583C130E0D1CFD5BB9CA446AACD0A5BB4D1EAC0BC
1A663A25A494EEF4C339B35D237DB3B0B6B70D2BAD3B8FD466D0F7E8A96C5B01
509CA365FE5660B04ABEC912CFDCFAEA3C2064E0BDD97A690DF3BB4ED2BB7AAD
8A85DA083ACA94EBD252B2DFE6A1938596E84EF98EBA255AD1B1D87BF2AA91EF
5125AD5C1D093D9EDBB369074B9EC69F17DAECAC6984221A0E540B193F46A982
6CA5C573084A558FFC878610A4DE16003DB8FA73486DF8756D88A12C51EBA463
DCC78263E820DAEF1908BCC9BA8BDDAFA7956DF362F7A7B8078B4769836F7ED8
8F38D5B5F29D1ED3EA266CE21F8649C0D684BBA8C34BBF8D36C1B22209235D43
722A6D650188D748660387DD66C4C544B5955EEBFB0C5B7AB83C26A0A59116F1
60813DC41D1FD29823ADA0AA67E9A7BFDFBEB00E0C5A6CC0C3B8B5ACBD97345C
9EA1FBAD5BA06584CF1DBB18A3899530FD0DAF0DA4830F6E4EE0CEB03A49DA8B
B6023AD82E606B2171924DAC43C4EADFC75420CFD4D01727D31519E561BFCCAC
F26626C52CB1A4E0BF508142B3160ABB356CA0FF086A4830E60F397DEA68DD62
B11637FEF2F72F826E0976C28230AD6CF564A2F2ED5B06ED845DAB61ECA08A3D
8B741EE319FB43334055F0B17676E515CF1004CC300033B9EDBE86CA77C47DC3
B68C553DC3C60DE068121DA5FA81DEBA4F56C46F39F10B23DC44BC3FFAF6CD37
B3FD60D8DA3F2A63B701C53056E8DC01D54AE33374900D75A9EEAFE59112627F
1A607F79C2DC47D7FA5E790D6895C3A96C7EF316766EAE17E5CBE414A985AE6D
97CE9768A7FC5413636E81B45D58EE27ED5E6738586CE6A5129875E988E95187
3E3655904E951858832D420E1BD17F184F6B95F12B186EFECE18DDCE8609940B
84C12CD1732FE89B6F50A296327132F5FDCDD9EAA42F7CC6676A78F1CB22E761
64A88730444BDF0B6E625202E8C4F911D622FB9A21E15F50CD678CE3B2055EB0
FF0F4577ED37BAA71184BCBFF15DB3FA9848B226B419C7479E48F23BC80CAA4D
C3A72EA7C8A70980922401AD1CA4CDFB5F8DE35C669CA4BBD2B93614119DCDB4
EB19205ED5A9F1C829DFBD94EF13BA090D5D5DF0FB428F1E87CFD6B3663EEA5F
F13060C0CCF299BFACAE6C2BE171EBD492A0954E7A3B13815F122ACA08B83741
CC96F2E111D6F36524E28E54D307AADC9AD8554158CD68DBF16E1DB6F3ADBBE5
EFB8D14C24C57B7A180142B48B71D898E2ACBC0AF45A7B03D474DC7614B122D9
4D36E72E57877DC41A3CD3FDE75C1B2BE3ABACB82925843CBE9FC7F23C4BBAC9
92664B5CE19574818A91D22EFE5428F121F684DB87D611E37A4F59F628ABF951
97241359B3B1545DA20BEDC0DBCA65C780D58890314F4A7582D9A6DF3E8B503C
C0D18B0627D71F7FAF33733F3C4F1470508C381F8AD24ADB01DFD729B184DA8D
5167E78578AD137E2BB22F33AB9789D5D2C54F6B837C528F11B68735F18C463C
312D68A61E39C0E1F7786E8E5CFA0B1DF44339CC8DEBC3CF72A953465E5AD842
91F36D83FEBBA5DA033B399FCB2BAC2C15F5FA416308783D140067748C598A4D
87C4D14E944C611967FA740C8F7E8EAAB8EDD5CA15112E3AE619ABC7A3D77E6E
280980762B1119C892727446BF2F3F09B91A4E27F17DD2ACA9F2CCFA41FB85D2
685CC5B27831BD293E636AA840C5906B776396CAAAFBCEA25C08BF2D9002715D
42002C984F1236B4984ACFDA4885730F876B03EB203642BEB8284F90CD9E7442
774B9851EA43F70EC22E2E777AAAFBC1AE1F33862D7E602A63F4D28E9757F44D
B58C5F380164980494A829240E41DC6BBD59185A225671D28B52C515D27B9D63
045450A7B1D7191EEAE4789FF1DDACC7B2E851AB6188D256BA53C9FCAFE79274
04B5708299D86218D8B5E1C543D37FEC0BDB029520EC426AA9EDF8288350C6BE
46BD5CCB66B13CF0725C852333719B687278546AB0C318F2839C6D41E71CEC57
27D1A765F8EE4339810C681B98A7C9D8A0E7A22DAC11D4E9C56A2E19206EA1D2
A9DA317FB6D148CD606C90C39B86ADBFB5057DF9DBD5091366CCA15E5A7A9FD6
C4944EDAAE8ED79F9811685F838924B407DA362A25E4CC050892AFBC1B681497
735FB958FF821C3F2B945A55342BDF86830E7CFBD514A0054653641014DF8933
0B3E0688BB287B1BC5CEA67BD0285F16D5B64E9603405889051753F58AFCA893
9AD5ECEBA13F848AA2D3DF613F0B071D9671CBDD15FEFD2CE25AA73D1D5B9AA8
8E345FA7D5287FA97D5497247706483F6717175B5730406492591DD8951980F2
0463CFF3C8D9BEC3CD6A9A834D63F61492DE770B72078EAC4C437D9D9E1E0EE2
3B1FB2A6C716137EE5D6B123FEEE545EA75BB5C6D2370ABD7B6B06B098058D87
00C7CABB1DFA3BE355742EC1F9D3FA9D9E4A97296C53A3E9D61AF1F06BB6EC4F
CBA65488C3E091E98F03C018F6D92B07918C9B6AE6031628E634C614B92BAE0D
89BC920C49A2B2B7C4139F8ADD192E2E2BB3141E8262571FD64A8965E524902F
1C9262B2621576B7B5319D696477CB83A245E3C047795688E482E743B8C64C61
0F025F67B7DC1290250CE9B66721EDFFDDCE16895962022AF35D169DFDE678B4
FE7B24F795FA9DEF14A99B598DE9969EE22C36FD65EFC7AE0A01AF0E9C8CD689
320195FCB02D035FD9E2D912DFFA3C05541C1E77D358917500DF87CA78D53CA9
6ED7F00F9B5E98CA17389B779CBAA2FF7C1453081ABA2A9E858E8F2F41E386B2
EFC97D52527D5584D8F6BC155EB4EC8A4BEB2DB287E1294600FF84A48FA56560
7A512C4B11FA31412CECC3E796002822CA2068AF5F1FF4C535F4C797B775B8BC
813E6A48A73DC595BAFBEE64548BC05BE200D6CAB89B00A1EA399D9A10562E9C
77D62F23869C387A74A2C565FE949A5F1B1AAC2958394F00E377379B5A589E61
7989D313FA88D9D0B0207CA434B626C7E08514C1179398AB3C3A254EBD879669
CCF1722AF46CE7766F2404BCC2E22F099DC70C110C6F0DEA7EA51B8C595D976B
CBE4F6FC93D9B07A8354FEEC8750D83C62695E13013E247BCE9BB6F023164BD8
7B347E49
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 23681430 16577000 1000 600 600 (intphase.dvi)
@start /Fa 134[35 40 120[{}2 66.4176 /CMMI8 rf /Fb 205[35
35 49[{}2 66.4176 /CMR8 rf /Fc 145[58 35[54 46[55 5[57
21[{}4 99.6264 /CMMI12 rf /Fd 138[54 38 38 38 1[54 49
54 81 27 2[27 1[49 1[43 54 2[49 13[54 1[76 7[35 73 10[76
7[49 1[49 49 1[49 1[27 32[54 13[{}25 99.6264 /CMR12 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black 120 344 a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg exch translate
 120 344 a
-16 368 a Fd(0.3325)120 344 y
 currentpoint grestore moveto
 120 344 a 971 1304 a Fd(0.3325)-80
350 y
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg exch translate
 -80 350 a -128 374 a Fc(\025)-71 389 y Fb(2)-80
350 y
 currentpoint grestore moveto
 -80 350 a 1052 1454 a Fc(\025)1109 1469 y Fb(1)396
600 y Fd(In)m(teger)396 726 y(Quan)m(tum)33 b(Hall)396
852 y(Insulator)396 977 y Fc(\033)455 941 y Fb(12)451
1002 y Fa(xy)560 977 y Fd(=)28 b Fc(n)1150 22 y Fd(Sup)s(er\015uid)1150
148 y(in)33 b Fc(J)1318 163 y Fb(1)1390 148 y Fd(and)g
Fc(J)1634 163 y Fb(2)396 148 y Fd(Sup)s(er\015uid)h(in)e
Fc(J)1032 163 y Fb(2)396 22 y Fd(Insulator)h(in)g Fc(J)979
37 y Fb(1)1150 701 y Fd(Sup)s(er\015uid)h(in)f Fc(J)1787
716 y Fb(1)1150 827 y Fd(Insulator)g(in)g Fc(J)1733 842
y Fb(2)-600 1500 y @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: intphase-inc.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: intphase.tex
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sun Sep 29 14:15:44 2013
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (intphase.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Scott)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Sep 29 14:15:44 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
2088 2775 M
63 0 V
3921 0 R
-63 0 V
4095 768 M
0 63 V
0 3921 R
0 -63 V
stroke
2088 4752 N
0 -3984 V
3984 0 V
0 3984 V
-3984 0 V
Z stroke
1.000 UP
1.000 UL
LTb
5.000 UL
LT0
4095 768 M
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
0 40 V
0 41 V
0 40 V
0 40 V
2088 2775 M
40 0 V
40 0 V
41 0 V
40 0 V
stroke 2249 2775 M
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
40 0 V
41 0 V
40 0 V
40 0 V
stroke
1.000 UL
LTb
2088 4752 N
0 -3984 V
3984 0 V
0 3984 V
-3984 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
